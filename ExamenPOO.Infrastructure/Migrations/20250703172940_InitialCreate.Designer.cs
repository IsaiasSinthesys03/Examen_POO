// <auto-generated />
using System;
using ExamenPOO.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamenPOO.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250703172940_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamenPOO.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 7, 3, 17, 29, 39, 423, DateTimeKind.Utc).AddTicks(9123),
                            Description = "High-performance gaming laptop with RTX graphics",
                            IsActive = true,
                            Name = "Laptop Gaming",
                            Price = 1299.99m,
                            Stock = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 7, 3, 17, 29, 39, 423, DateTimeKind.Utc).AddTicks(9552),
                            Description = "Ergonomic wireless mouse with RGB lighting",
                            IsActive = true,
                            Name = "Wireless Mouse",
                            Price = 29.99m,
                            Stock = 50,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Home",
                            CreatedAt = new DateTime(2025, 7, 3, 17, 29, 39, 423, DateTimeKind.Utc).AddTicks(9554),
                            Description = "Ceramic coffee mug with custom design",
                            IsActive = true,
                            Name = "Coffee Mug",
                            Price = 12.99m,
                            Stock = 100,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ExamenPOO.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 3, 17, 29, 39, 281, DateTimeKind.Utc).AddTicks(7899),
                            Email = "admin@example.com",
                            FirstName = "Administrator",
                            IsActive = true,
                            LastName = "User",
                            PasswordHash = "$2a$11$HCTkUTSGoiijP6bxyUacoexU9sTKXEKMrip2PbttfcBpP9VzkHo8e",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 3, 17, 29, 39, 422, DateTimeKind.Utc).AddTicks(8692),
                            Email = "demo@example.com",
                            FirstName = "Demo",
                            IsActive = true,
                            LastName = "User",
                            PasswordHash = "$2a$11$STK7I3RN6pdsjIClm0UU8uZaQq6YZm/qXIQMkGXhbUCdHH/0LSPkm",
                            Username = "demo"
                        });
                });

            modelBuilder.Entity("ExamenPOO.Core.Entities.Product", b =>
                {
                    b.HasOne("ExamenPOO.Core.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExamenPOO.Core.Entities.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
